function [errorSurf, flip] = getPFEerrorsurface(EYE)

%   Inputs
% EYE--single struct, not array
%   Outputs
% errSurf--struct with fields:
%   surface--numerical matrix
%   x--gaze x values
%   y--gaze y values

if numel(EYE) > 1
    EYE = EYE(listdlg('PromptString', 'Plot from which dataset?',...
        'ListString', {EYE.name}));
end

f = figure(...
    'ToolBar', 'none',...
    'MenuBar', 'none',...
    'NumberTitle', 'off',...
    'Name', 'Pupil foreshortening error surface',...
    'Units', 'normalized',...
    'Position', [0.2 0.2 0.7 0.7],...
    'UserData', struct(...
        'flip', false,...
        'EYE', EYE,...
        'errorSurf', [],...
        'currPlotType', 'error'));

% Plot
axes(f,...
    'Tag', 'errorSurface',...
    'Units', 'normalized',...
    'Position', [0.36 0.11 0.58 0.78])
% Params
controlPanel = uipanel(f,...
    'Tag', 'controlPanel',...
    'Units', 'normalized',...
    'Position', [0.01 0.01 0.28 0.98]);
% Trim proportion
uicontrol(controlPanel,...
    'Style', 'text',...
    'String', 'Trim what proportion of highest & lowest x and y gaze values?',...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.01 0.91 0.98 0.08])
uicontrol(controlPanel,...
    'Tag', 'trimPpn',...
    'Style', 'edit',...
    'String', '0.0',...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.01 0.81 0.98 0.08])
% Manual range
uicontrol(controlPanel,...
    'Style', 'text',...
    'String', 'Or input gaze range (low x, high x, low y, high y) (overwrites the above)',...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.01 0.71 0.98 0.08])
uicontrol(controlPanel,...
    'Tag', 'inputRange',...
    'Style', 'edit',...
    'String', '',...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.01 0.61 0.98 0.08])
% Grid n
uicontrol(controlPanel,...
    'Style', 'text',...
    'String', 'Divide the gaze field into an n-by-n grid where n equals:',...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.01 0.51 0.98 0.08])
uicontrol(controlPanel,...
    'Tag', 'gridN',...
    'Style', 'edit',...
    'String', '32',...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.01 0.41 0.98 0.08])
% Boxcar param
uicontrol(controlPanel,...
    'Style', 'text',...
    'String', 'Boxcar square side length (in units of grid points):',...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.01 0.31 0.98 0.08])
uicontrol(controlPanel,...
    'Tag', 'boxcar',...
    'Style', 'edit',...
    'String', '0.5',...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.01 0.21 0.98 0.08])
uicontrol(controlPanel,...
    'Style', 'pushbutton',...
    'String', 'Plot error surface',...
    'Callback', @(h,e)plotErrorSurf('error'),...
    'KeyPressFcn', @(h,e)enterdo(e, @()plotErrorSurf('error')),...
    'Interruptible', 'off',...
    'BusyAction', 'cancel',...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.01 0.11 0.48 0.08])
uicontrol(controlPanel,...
    'Style', 'pushbutton',...
    'String', 'Plot density',...
    'Callback', @(h,e)plotErrorSurf('density'),...
    'KeyPressFcn', @(h,e)enterdo(e, @()plotErrorSurf('density')),...
    'Interruptible', 'off',...
    'BusyAction', 'cancel',...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.51 0.11 0.48 0.08])
uicontrol(controlPanel,...
    'Style', 'pushbutton',...
    'String', 'Flip y coordinates',...
    'Callback', @(h,e) flipycoords,...
    'KeyPressFcn', @(h,e)enterdo(e, @flipycoords),...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.01 0.01 0.48 0.08])
uicontrol(controlPanel,...
    'Style', 'pushbutton',...
    'String', 'Done',...
    'Callback', @(h,e)uiresume(f),...
    'KeyPressFcn', @(h,e)enterdo(e, @()uiresume(f)),...
    'FontSize', 10,...
    'Units', 'normalized',...
    'Position', [0.51 0.01 0.48 0.08])

plotErrorSurf(f, f.UserData.currPlotType);

uiwait(f);
if isvalid(f)
    errorSurf = f.UserData.errorSurf;
    flip = f.UserData.flip;
    close(f);
else
    errorSurf = [];
    flip = [];
end
    
end

function plotErrorSurf(varargin)

fprintf('Plotting...')

graphicsIdx = cellfun(@(x) all(isgraphics(x)), varargin);
if any(graphicsIdx)
    f = varargin{graphicsIdx};
else
    f = gcbf;
end

EYE = f.UserData.EYE;

gridN = str2num(get(getcomponentbytag(f, 'controlPanel', 'gridN'), 'String'));
trimPpn = str2num(get(getcomponentbytag(f, 'controlPanel', 'trimPpn'), 'String'));
inputRange = str2num(get(getcomponentbytag(f, 'controlPanel', 'inputRange'), 'String'));
boxcar = str2num(get(getcomponentbytag(f, 'controlPanel', 'boxcar'), 'String'));

fprintf('Computing error surface...')
f.UserData.errorSurf = struct(...
    'surface', computePFEsurface,...
    'x', ranges.x,...
    'y', ranges.y);
fprintf('Plotting...')
axes(getcomponentbytag(f, 'errorSurface'));
if any(strcmpi(varargin, 'density'))
    title('Measured dilation by gaze coordinates')
    image(ranges.x, ranges.y, densities,...
        'CDataMapping', 'scaled');
    cbarLabel = 'N. data points';
elseif any(strcmpi(varargin, 'error'))
    title('Measured dilation by gaze coordinates')
    im = image(ranges.x, ranges.y, averages,...
        'CDataMapping', 'scaled');
    set(im, 'AlphaData', ~isnan(averages))
    cbarLabel = 'Average measured pupil diameter';
end
set(gca, 'YDir', 'normal');
xlabel('Gaze x');
ylabel('Gaze y');
c = colorbar;
c.Label.String = cbarLabel;

fprintf('done\n')

end

function flipycoords

f = gcbf;
if f.UserData.flip
    f.UserData.flip = false;
else
    f.UserData.flip = true;
end
f.UserData.EYE.gaze.y = -f.UserData.EYE.gaze.y;
plotErrorSurf(f.UserData.EYE, f, f.UserData.currPlotType)

end