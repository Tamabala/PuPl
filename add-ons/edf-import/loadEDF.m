
function EYE = loadEDF(fullpath)

[~, filename] = fileparts(fullpath);

edf = Edf2Mat(fullpath);

ASSUMED_SRATE = 1000; % Hz

ASSUMED_SRATE = round((numel(edf.timeline) - 1) / ((edf.timeline(end) - edf.timeline(1)) / 1000));

eventinfo = struct(...
    'time', num2cell((edf.Events.Messages.time - edf.timeline(1))/10000),...
    'type', edf.Events.Messages.info,...
    'latency', num2cell(round((edf.Events.Messages.time - edf.timeline(1))/10000 * ASSUMED_SRATE + 1)));

pupildiam = sqrt(edf.Samples.pa(:, 2)*4/pi)';
pupildiam(pupildiam < eps) = nan;
EYE = struct(...
    'name', filename,...
    'srate', ASSUMED_SRATE,...
    'urGaze', struct(...
        'x', struct(...
            'left', edf.Samples.gx(:, edf.EYES.LEFT)',...
            'right', edf.Samples.gx(:, edf.EYES.RIGHT)'),...
        'y', struct(...
            'left', edf.Samples.gy(:, edf.EYES.LEFT)',...
            'right', edf.Samples.gy(:, edf.EYES.RIGHT)')),...
    'gaze', struct(...
        'x', edf.Samples.posX(:)',...
        'y', edf.Samples.posY(:)'),...
    'urDiam', struct(...
        'left', struct(...
            'x', pupildiam,...
            'y', pupildiam),...
        'right', struct(...
            'x', pupildiam,...
            'y', pupildiam)),...
    'diam', struct(...
        'left', pupildiam,...
        'right', pupildiam,...
        'both', pupildiam),...
    'event', eventinfo);

EYE = pupl_check(EYE);

end